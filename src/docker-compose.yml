version: "3.9"
services:
  # db-postgis:
  #   image: postgis/postgis:15-3.3 # alt: postgres:15.3
  #   restart: always
  #   volumes:
  #     - data:/var/lib/postgres/data
  #   environment:
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     #- POSTGRES_INITDB_ARGS=--encoding=UTF8

  #   ports:
  #     - ${POSTGRES_PORT}:${POSTGRES_PORT}
  #   expose:
  #     - ${POSTGRES_PORT}

  db:
    image: postgres:15.3 # alt: postgres:15.3
    restart: always
    volumes:
      - data:/var/lib/postgres/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      #- POSTGRES_INITDB_ARGS=--encoding=UTF8

    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}

  # api:
  #   build:
  #     context: ./api
  #     dockerfile: api.dockerfile
  #   depends_on:
  #     - db
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DOCKERIZED=true
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #   expose:
  #     - "8000"

  #   volumes:
  #     - data:/var/lib/postgis/data

  # downloader:
  #   build:
  #     context: ./downloader
  #     dockerfile: downloader.dockerfile
  #   environment:
  #     - DOCKERIZED=true

  # ml-serve:
  #   build:
  #     context: ./ml-serve
  #     dockerfile: ml-serve.dockerfile
  #   ports:
  #     - "8080:8080"
  #     - "8081:8081"
  #     - "8082:8082"
  #   expose:
  #     - "8080"
  #     - "8081"
  #     - "8082"
  #   # limits the number of cpus the container can use
  #   # else on each thread (core) a model will be loaded
  #   cpus: 1.0

  # preprocessing:
  #   build:
  #     context: ./preprocessing
  #     dockerfile: preprocessing.dockerfile
  #   depends_on:
  #     - ml-serve
  #   environment:
  #     - DOCKERIZED=true
  #   ports:
  #     - "5678:5678"
  #   expose:
  #     - "5678"

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: frontend.dockerfile
  #   ports:
  #     - "80:5000"
  #   expose:
  #     - "80"

volumes:
  data:
