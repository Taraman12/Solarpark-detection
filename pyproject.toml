[tool.poetry]
name = "download_sentinel_data"
version = "0.1.0"
description = ""
authors = ["FabKoch <55655975+Taraman12@users.noreply.github.com>"]
readme = "README.md"
#packages = [{include = "solarpark_detection"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

[tool.poetry.group.main.dependencies]
sentinelsat = "^1.2.1"
geopandas = "^0.12.2"
load-dotenv = "^0.1.0"

[tool.poetry.group.lint.dependencies]
isort = "^5.12.0"
black = "^23.1.0"
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
mypy = "^1.1.1"
docformatter = {extras = ["tomli"], version = "^1.5.1"}

[tool.poetry.group.dev.dependencies]
boto3 = {extras = ["crt"], version = "^1.26.104"}
rasterio = "^1.3.6"
matplotlib = "^3.7.1"

# installation of pytorch with poetry can lead to errors
# hopefully this will be fixed in the future
# however, it is possible to install it manually with pip
# https://stackoverflow.com/questions/68892660/cannot-install-the-gpu-version-of-torch-and-torchvision-in-poetry-due-to-a-depen
# https://github.com/python-poetry/poetry/issues/6409
[tool.poetry.group.ml-model.dependencies]
numpy = "^1.23.5"
segmentation-models-pytorch = "^0.3.2"
tensorflow-io-gcs-filesystem = "0.31.0"
tensorflow = "^2.12.0"
tensorboard = "^2.12.2"
torchmetrics = "^0.11.4"
torch = { version = "2.0.0+cu117", source = "pytorch" }
torchvision = { version = "0.15.0+cu117", source = "pytorch" }

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu117/"
default = false
secondary = true




[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
ipykernel = "^6.22.0"

[tool.poetry.group.api.dependencies]
fastapi = "^0.95.0"
uvicorn = "^0.21.1"
sqlalchemy = "^2.0.7"
pydantic = "^1.10.7"
psycopg2 = "^2.9.5"


[tool.isort]
profile = "black"

[tool.mypy]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.10"
# untyped
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# 
enable-incomplete-features = "Unpack"
# Misc
pretty = true

[tool.docformatter]
recursive = true
wrap-summaries = 88
wrap-descriptions = 88
blank = true
pre-summary-newline = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
